spddat %>% mutate(gender = recode(gender,
'0' = "Women",
'1' = "Men")) -> spddat
# 2d contour plot
p <- ggplot(spddat, aes(attr3_1, attr1_1, color=gender)) +
geom_density_2d() +
labs(title = "Physical attractiveness preference vs. self-perception") +
scale_colour_discrete(labels=c("Men", "Women"), type=c("#d01c8b", "#4dac26")) +
scale_x_continuous(breaks=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) +
labs(title = "Physical Attractiveness",
subtitle = "Do participants' self-ratings impact their preferences?",
colour = "Gender") +
xlab("Self-Rating from 1-10") +
ylab("Weight in Decision to Match (%)") +
annotate("label", label="Pearson's r = 0.18, p < .001", x=5.5, y=40, family="Avenir") +
theme_light() +
theme(text = element_text(family="Avenir"))
ggplotly(p)
# load in libraries
library(tidyverse)
# get data to analyze
data_path <- "speed_dating_data.csv"
spddat <- read.csv(data_path)
spddat <- subset(spddat, select=c(shar1_1, shar1_s, shar1_2, shar1_3, match))
spddat <- data.frame(time=c("Before", "During", "Days After", "Weeks After",
"Before", "During", "Days After", "Weeks After"),
match=c(0, 0, 0, 0,
1, 1, 1, 1),
shar_imp=c(mean(spddat[!is.na(spddat$shar1_1) & spddat$match == 0,]$shar1_1),
mean(spddat[!is.na(spddat$shar1_s) & spddat$match == 0,]$shar1_s),
mean(spddat[!is.na(spddat$shar1_2) & spddat$match == 0,]$shar1_2),
mean(spddat[!is.na(spddat$shar1_3) & spddat$match == 0,]$shar1_3),
mean(spddat[!is.na(spddat$shar1_1) & spddat$match == 1,]$shar1_1),
mean(spddat[!is.na(spddat$shar1_s) & spddat$match == 1,]$shar1_s),
mean(spddat[!is.na(spddat$shar1_2) & spddat$match == 1,]$shar1_2),
mean(spddat[!is.na(spddat$shar1_3) & spddat$match == 1,]$shar1_3)))
spddat %>% mutate(match = recode(match,
'0' = "Did Not Match",
'1' = "Matched")) -> spddat
# create plot
p <- ggplot(spddat, aes(x=time, y=shar_imp, group=match, colour=match, shape=match)) +
geom_line() +
geom_point() +
scale_x_discrete(limits=c("Before", "During", "Days After", "Weeks After")) +
scale_colour_discrete(type=c("#7b3494", "#008837")) +
scale_shape_manual(values=c(17, 15)) +
labs(title = "Importance of Shared Interests Grouped By Match",
subtitle = "Are participants who value shared interests more picky?",
colour = "Match",
shape = "Match") +
xlab("Time Surveyed") +
ylab("Importance of Shared Interests (%)") +
theme_light() +
theme(text = element_text(family="Avenir")) +
ylim(c(11, 13))
ggplotly(p)
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
library(readr)
library(plotly)
speed_dating <- read_csv("speed_dating_data.csv")
TP1 <- ggplot(data = speed_dating, aes(x = gender, y = importance_same_race, col = race)) + geom_point()
#ggplotly(TP1)
TP2 <- ggplot(data = speed_dating, aes(x = importance_same_race, fill = gender)) + geom_bar(position = "dodge")
#ggplotly(TP2)
TP3 <- ggplot(data = speed_dating, aes(x = gender, y = importance_same_religion, col = race)) + geom_point()
#ggplotly(TP3)
TP4 <- ggplot(data = speed_dating, aes(x = importance_same_religion, fill = gender)) + geom_bar(position = "dodge")
#ggplotly(TP4)
library(dygraphs)
speed_dating <- read_csv("speed_dating_data.csv")
#head(speed_dating)
library(xts)
speed_dating1 <- xts(speed_dating$importance_same_race, order.by = speed_dating$date)
library(flexdashboard)
library(plotly)
data_path <- "speed_dating_data.csv"
spddat <- read.csv(data_path)
# show data summary
summary(spddat)
# load in libraries
library(tidyverse)
library(Hmisc)
# get data to analyze
data_path <- "speed_dating_data.csv"
spd_dat <- read.csv(data_path)
spddat <- subset(spd_dat, select=c(iid, gender, attr1_1, attr3_1))
# get pearson's r and p value for data
spddat.rcorr = rcorr(as.matrix(spddat))
spddat.coeff = spddat.rcorr$r
spddat.p = spddat.rcorr$P
coeff = data.frame(spddat.coeff)
p = data.frame(spddat.p)
# print wanted correlation coefficient and p value
coeff <- subset(coeff, select=c(attr1_1))
coeff <- coeff[!(row.names(coeff) %in% c("iid", "gender")),]
p <- subset(p, select=c(attr1_1))
p <- p[!(row.names(p) %in% c("iid", "gender")),]
#print(coeff)
#print(p)
# preprocess data to remove nas and recode
spddat <- na.omit(spddat)
spddat <- unique(spddat)
spddat %>% mutate(gender = recode(gender,
'0' = "Women",
'1' = "Men")) -> spddat
# 2d contour plot
p <- ggplot(spddat, aes(attr3_1, attr1_1, color=gender)) +
geom_density_2d() +
labs(title = "Physical attractiveness preference vs. self-perception") +
scale_colour_discrete(labels=c("Men", "Women"), type=c("#d01c8b", "#4dac26")) +
scale_x_continuous(breaks=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) +
labs(title = "Physical Attractiveness",
subtitle = "Do participants' self-ratings impact their preferences?",
colour = "Gender") +
xlab("Self-Rating from 1-10") +
ylab("Weight in Decision to Match (%)") +
annotate("label", label="Pearson's r = 0.18, p < .001", x=5.5, y=40, family="Avenir") +
theme_light() +
theme(text = element_text(family="Avenir"))
ggplotly(p)
speed_dating <- read_csv("speed_dating_data_seongdeok.csv")
library(flexdashboard)
library(plotly)
data_path <- "speed_dating_data.csv"
spddat <- read.csv(data_path)
# show data summary
summary(spddat)
# load in libraries
library(tidyverse)
library(Hmisc)
# get data to analyze
data_path <- "speed_dating_data.csv"
spd_dat <- read.csv(data_path)
spddat <- subset(spd_dat, select=c(iid, gender, attr1_1, attr3_1))
# get pearson's r and p value for data
spddat.rcorr = rcorr(as.matrix(spddat))
spddat.coeff = spddat.rcorr$r
spddat.p = spddat.rcorr$P
coeff = data.frame(spddat.coeff)
p = data.frame(spddat.p)
# print wanted correlation coefficient and p value
coeff <- subset(coeff, select=c(attr1_1))
coeff <- coeff[!(row.names(coeff) %in% c("iid", "gender")),]
p <- subset(p, select=c(attr1_1))
p <- p[!(row.names(p) %in% c("iid", "gender")),]
#print(coeff)
#print(p)
# preprocess data to remove nas and recode
spddat <- na.omit(spddat)
spddat <- unique(spddat)
spddat %>% mutate(gender = recode(gender,
'0' = "Women",
'1' = "Men")) -> spddat
# 2d contour plot
p <- ggplot(spddat, aes(attr3_1, attr1_1, color=gender)) +
geom_density_2d() +
labs(title = "Physical attractiveness preference vs. self-perception") +
scale_colour_discrete(labels=c("Men", "Women"), type=c("#d01c8b", "#4dac26")) +
scale_x_continuous(breaks=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) +
labs(title = "Physical Attractiveness",
subtitle = "Do participants' self-ratings impact their preferences?",
colour = "Gender") +
xlab("Self-Rating from 1-10") +
ylab("Weight in Decision to Match (%)") +
annotate("label", label="Pearson's r = 0.18, p < .001", x=5.5, y=40, family="Avenir") +
theme_light() +
theme(text = element_text(family="Avenir"))
ggplotly(p)
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
library(readr)
library(plotly)
speed_dating <- read_csv("speed_dating_data_seongdeok.csv")
TP1 <- ggplot(data = speed_dating, aes(x = gender, y = importance_same_race, col = race)) + geom_point()
#ggplotly(TP1)
TP2 <- ggplot(data = speed_dating, aes(x = importance_same_race, fill = gender)) + geom_bar(position = "dodge")
#ggplotly(TP2)
TP3 <- ggplot(data = speed_dating, aes(x = gender, y = importance_same_religion, col = race)) + geom_point()
#ggplotly(TP3)
TP4 <- ggplot(data = speed_dating, aes(x = importance_same_religion, fill = gender)) + geom_bar(position = "dodge")
#ggplotly(TP4)
library(dygraphs)
speed_dating <- read_csv("speed_dating_data_seongdeok.csv")
#head(speed_dating)
library(xts)
speed_dating1 <- xts(speed_dating$importance_same_race, order.by = speed_dating$date)
speed_dating2 <- xts(speed_dating$importance_same_religion, order.by = speed_dating$date)
#head(speed_dating1)
#head(speed_dating2)
#dygraph(speed_dating1)
#dygraph(speed_dating2)
speed_dating3 <- cbind(speed_dating1, speed_dating2) # merge the data
colnames(speed_dating3) <- c("Importance of Same Race", "Importance of Same Religion") # change the variable names
#head(speed_dating3)
dygraph(speed_dating3) %>% dyRangeSelector()
# load in libraries
library(tidyverse)
# get data to analyze
data_path <- "speed_dating_data.csv"
spddat <- read.csv(data_path)
spddat <- subset(spddat, select=c(shar1_1, shar1_s, shar1_2, shar1_3, match))
spddat <- data.frame(time=c("Before", "During", "Days After", "Weeks After",
"Before", "During", "Days After", "Weeks After"),
match=c(0, 0, 0, 0,
1, 1, 1, 1),
shar_imp=c(mean(spddat[!is.na(spddat$shar1_1) & spddat$match == 0,]$shar1_1),
mean(spddat[!is.na(spddat$shar1_s) & spddat$match == 0,]$shar1_s),
mean(spddat[!is.na(spddat$shar1_2) & spddat$match == 0,]$shar1_2),
mean(spddat[!is.na(spddat$shar1_3) & spddat$match == 0,]$shar1_3),
mean(spddat[!is.na(spddat$shar1_1) & spddat$match == 1,]$shar1_1),
mean(spddat[!is.na(spddat$shar1_s) & spddat$match == 1,]$shar1_s),
mean(spddat[!is.na(spddat$shar1_2) & spddat$match == 1,]$shar1_2),
mean(spddat[!is.na(spddat$shar1_3) & spddat$match == 1,]$shar1_3)))
spddat %>% mutate(match = recode(match,
'0' = "Did Not Match",
'1' = "Matched")) -> spddat
# create plot
p <- ggplot(spddat, aes(x=time, y=shar_imp, group=match, colour=match, shape=match)) +
geom_line() +
geom_point() +
scale_x_discrete(limits=c("Before", "During", "Days After", "Weeks After")) +
scale_colour_discrete(type=c("#7b3494", "#008837")) +
scale_shape_manual(values=c(17, 15)) +
labs(title = "Importance of Shared Interests Grouped By Match",
subtitle = "Are participants who value shared interests more picky?",
colour = "Match",
shape = "Match") +
xlab("Time Surveyed") +
ylab("Importance of Shared Interests (%)") +
theme_light() +
theme(text = element_text(family="Avenir")) +
ylim(c(11, 13))
ggplotly(p)
library(flexdashboard)
library(plotly)
data_path <- "speed_dating_data.csv"
spddat <- read.csv(data_path)
# show data summary
summary(spddat)
# load in libraries
library(tidyverse)
library(Hmisc)
# get data to analyze
data_path <- "speed_dating_data.csv"
spd_dat <- read.csv(data_path)
spddat <- subset(spd_dat, select=c(iid, gender, attr1_1, attr3_1))
# get pearson's r and p value for data
spddat.rcorr = rcorr(as.matrix(spddat))
spddat.coeff = spddat.rcorr$r
spddat.p = spddat.rcorr$P
coeff = data.frame(spddat.coeff)
p = data.frame(spddat.p)
# print wanted correlation coefficient and p value
coeff <- subset(coeff, select=c(attr1_1))
coeff <- coeff[!(row.names(coeff) %in% c("iid", "gender")),]
p <- subset(p, select=c(attr1_1))
p <- p[!(row.names(p) %in% c("iid", "gender")),]
#print(coeff)
#print(p)
# preprocess data to remove nas and recode
spddat <- na.omit(spddat)
spddat <- unique(spddat)
spddat %>% mutate(gender = recode(gender,
'0' = "Women",
'1' = "Men")) -> spddat
# 2d contour plot
p <- ggplot(spddat, aes(attr3_1, attr1_1, color=gender)) +
geom_density_2d() +
labs(title = "Physical attractiveness preference vs. self-perception") +
scale_colour_discrete(labels=c("Men", "Women"), type=c("#d01c8b", "#4dac26")) +
scale_x_continuous(breaks=c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)) +
labs(title = "Physical Attractiveness",
subtitle = "Do participants' self-ratings impact their preferences?",
colour = "Gender") +
xlab("Self-Rating from 1-10") +
ylab("Weight in Decision to Match (%)") +
annotate("label", label="Pearson's r = 0.18, p < .001", x=5.5, y=40, family="Avenir") +
theme_light() +
theme(text = element_text(family="Avenir"))
ggplotly(p)
# load in libraries
library(tidyverse)
# get data to analyze
data_path <- "speed_dating_data.csv"
spddat <- read.csv(data_path)
spddat <- subset(spddat, select=c(shar1_1, shar1_s, shar1_2, shar1_3, match))
spddat <- data.frame(time=c("Before", "During", "Days After", "Weeks After",
"Before", "During", "Days After", "Weeks After"),
match=c(0, 0, 0, 0,
1, 1, 1, 1),
shar_imp=c(mean(spddat[!is.na(spddat$shar1_1) & spddat$match == 0,]$shar1_1),
mean(spddat[!is.na(spddat$shar1_s) & spddat$match == 0,]$shar1_s),
mean(spddat[!is.na(spddat$shar1_2) & spddat$match == 0,]$shar1_2),
mean(spddat[!is.na(spddat$shar1_3) & spddat$match == 0,]$shar1_3),
mean(spddat[!is.na(spddat$shar1_1) & spddat$match == 1,]$shar1_1),
mean(spddat[!is.na(spddat$shar1_s) & spddat$match == 1,]$shar1_s),
mean(spddat[!is.na(spddat$shar1_2) & spddat$match == 1,]$shar1_2),
mean(spddat[!is.na(spddat$shar1_3) & spddat$match == 1,]$shar1_3)))
spddat %>% mutate(match = recode(match,
'0' = "Did Not Match",
'1' = "Matched")) -> spddat
# create plot
p <- ggplot(spddat, aes(x=time, y=shar_imp, group=match, colour=match, shape=match)) +
geom_line() +
geom_point() +
scale_x_discrete(limits=c("Before", "During", "Days After", "Weeks After")) +
scale_colour_discrete(type=c("#7b3494", "#008837")) +
scale_shape_manual(values=c(17, 15)) +
labs(title = "Importance of Shared Interests Grouped By Match",
subtitle = "Are participants who value shared interests more picky?",
colour = "Match",
shape = "Match") +
xlab("Time Surveyed") +
ylab("Importance of Shared Interests (%)") +
theme_light() +
theme(text = element_text(family="Avenir")) +
ylim(c(11, 13))
ggplotly(p)
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
library(readr)
library(plotly)
speed_dating <- read_csv("speed_dating_data_seongdeok.csv")
TP1 <- ggplot(data = speed_dating, aes(x = gender, y = importance_same_race, col = race)) + geom_point()
#ggplotly(TP1)
TP2 <- ggplot(data = speed_dating, aes(x = importance_same_race, fill = gender)) + geom_bar(position = "dodge")
#ggplotly(TP2)
TP3 <- ggplot(data = speed_dating, aes(x = gender, y = importance_same_religion, col = race)) + geom_point()
#ggplotly(TP3)
TP4 <- ggplot(data = speed_dating, aes(x = importance_same_religion, fill = gender)) + geom_bar(position = "dodge")
#ggplotly(TP4)
library(dygraphs)
speed_dating <- read_csv("speed_dating_data_seongdeok.csv")
#head(speed_dating)
library(xts)
speed_dating1 <- xts(speed_dating$importance_same_race, order.by = speed_dating$date)
speed_dating2 <- xts(speed_dating$importance_same_religion, order.by = speed_dating$date)
#head(speed_dating1)
#head(speed_dating2)
#dygraph(speed_dating1)
#dygraph(speed_dating2)
speed_dating3 <- cbind(speed_dating1, speed_dating2) # merge the data
colnames(speed_dating3) <- c("Importance of Same Race", "Importance of Same Religion") # change the variable names
#head(speed_dating3)
dygraph(speed_dating3) %>% dyRangeSelector()
library(ggplot2)
library(gganimate)
library(plotly)
library(dplyr)
library(ggthemes)
df <- read.csv("Field.csv")
df1 <- filter (df, match=="1" )
graph2 <- df1 %>%
ggplot(aes(x=field, y=interests_correlate, fill=field))+
geom_boxplot()+
theme_fivethirtyeight()+
labs(title = "Interest Correlation across Fields",
y= "Interest Correlation", x= "Fields", caption = "Source:Kaggle.com")+
theme(legend.position = c(.95, .95),
legend.justification = c("right", "top"),
legend.box.just = "right",
legend.margin = margin(6, 6, 6, 6),
axis.title.y =element_text(),
#text=element_text(family = "Poppins Semibold"),
panel.grid.major.x = element_blank(),
axis.title.x = element_blank(),axis.ticks.x = element_blank(),
axis.text.x = element_blank())+
scale_fill_tableau()
#graph2
graph2.animation= graph2 +
transition_states(field, transition_length = 50, state_length = 10)+
shadow_mark(alpha=0.5)+
enter_grow()+
exit_fade()+
ease_aes("back-out")
graph2.animation
library(ggplot2)
library(plotly)
library(ggthemes)
library(RColorBrewer)
require(reshape2)
df <- read.csv("Field.csv")
df1 <- filter (df, match=="1" )
colnames(df1)[16] <- "Attraction"
colnames(df1)[17] <- "Sincerity"
colnames(df1)[18] <- "Intelligence"
colnames(df1)[19] <- "Funny"
colnames(df1)[20] <- "Ambition"
X_label <- c("Unknown", "Arts", "Bio Sc", "Business","Eng", "Health/Med","Law", "Math Sc", "Nat Sc", "Others", "Social Sc")
gg<-ggplot(df1, aes(field)) +
geom_point(aes(y = Sincerity, colour = "Sincerity"))+
geom_point(aes(y = Attraction, colour = "Attraction"))+
geom_point(aes(y = Intelligence, colour = "Intelligence"))+
geom_point(aes(y = Funny, colour = "Funny"))+
geom_point(aes(y = Ambition, colour = "Ambition"))+
scale_colour_manual(values = c("darkolivegreen3", "maroon2", "plum1","cornsilk","darkolivegreen"))+
#scale_colour_brewer(palette = "PiYG")+
labs( xlab("Fields"), caption = "Source:Kaggle.com")+
scale_x_discrete(labels= X_label)+
guides(color=guide_legend("Preferences for Dating"))+
theme_fivethirtyeight()
gg1<-gg+labs(title = "Attributes for Successful Match",
caption = "Data source: Kaggle.com")+
theme(plot.title = element_text(hjust = 0.5,color = "black", size = 12,face = "bold" ),
plot.caption = element_text(hjust = 1,color = "black", face = "italic"))
#gg1
ggplotly(gg1) %>%
layout(legend = list(orientation = "h",   # show entries horizontally
xanchor = "center",  # use center of legend as anchor
x = 0.5))
library(ggplot2)
library(tidyverse)
data <- read_csv("speed_dating_data.csv")
data <- subset(data, select=c(attr_o, age, match))
p <- ggplot(data,aes(x=attr_o,y=age)) +
geom_point(aes(group=match, color=factor(match)),
position=position_jitter(width=.45, height=.2)) +
geom_smooth(formula = y ~ poly(x,2), method = "lm", se = T, level = 0.9, color="#551b8c") +
scale_color_manual(limits=c(0, 1), labels=c("Did Not Match", "Matched"),
values=c("#9966cc","#f4c2c2")) +
scale_x_continuous(breaks=c(0, 2, 4, 6, 8, 10), labels=c(0, 2, 4, 6, 8, 10)) +
labs(title = "Implicit Biases Based on Age",
color = "Match") +
ylab("Age") +
xlab("Attractiveness Rating By Partner 0-10") +
theme_light() +
theme(text = element_text(family="Times New Roman"))
ggplotly(p)
library(tidyverse)
data <- read_csv("speed_dating_data.csv")
data <- subset(data, select=c(race, match, attr_o))
data %>% mutate(race = recode(race,
'1' = "African American",
'2' = "European",
'3' = "Latino",
'4' = "Asian",
'5' = "Native American",
'6' = "Other")) -> data
data$race <- replace_na(data$race, "Other")
ggplot(data, aes(x = race, y = attr_o)) +
geom_point(aes(color = as.factor(attr_o), size = match),
position=position_jitter(height=.49, width=.42)) +
scale_color_manual(values = c("#af002a", "#ff7e00", "#ffbf00", "#3b7a57", "#34b334", "#3b3b6d", "#003a6c", "#9966cc", "#431c53", "#551b8c", "#915c83", "#f4c2c2", "#e85395", "#f7238a", "#9f8170", "#98777b", "#848482", "#352925"), guide="none") +
scale_size(range = c(0.5, 1.75), breaks=c(0, 1)) +
scale_y_continuous(breaks=c(0, 2, 4, 6, 8, 10)) +
xlab("Race of Participant") +
ylab("Attractiveness Rating by Partner 0-10") +
labs(title="Implicit Biases Based on Race",
size="Match") +
theme_light() +
theme(text = element_text(family="Times New Roman"))
spddat <- read_csv("speed_dating_data.csv")
spddat <- subset(spddat, select=c(amb1_1, attr1_1, fun1_1, intel1_1, shar1_1, sinc1_1,
gender))
spddat <- melt(spddat, id.vars=c("gender"))
spddat$numgender[spddat$gender == 0] = sum(spddat$gender == 0)
spddat$numgender[spddat$gender == 1] = sum(spddat$gender == 1)
spddat$adjusted <- spddat$value / spddat$numgender
spddat %>% mutate(gender = recode(gender,
'0' = "Women",
'1' = "Men")) -> spddat
ggplot(spddat, aes(variable, adjusted, fill=variable)) +
geom_col() +
scale_fill_manual(limits=c("amb1_1", "attr1_1", "fun1_1",
"intel1_1", "shar1_1", "sinc1_1"),
labels=c("Ambition", "Attraction", "Funny",
"Intelligent", "Interests", "Sincere"),
values=c("#66c2a5", "#fc8d62", "#8da0cb",
"#e78ac3", "#a6d854", "#ffd92f")) +
scale_x_discrete(limits=c("amb1_1", "attr1_1", "fun1_1",
"intel1_1", "shar1_1", "sinc1_1"),
labels=c("Ambition", "Attraction", "Funny",
"Intelligent", "Interests", "Sincere")) +
labs(title = "What Are Participants Looking For In Their Matches?",
fill = "Attribute") +
ylab("Weight in Decision to Match") +
xlab("Attribute") +
theme_bw() +
theme(text = element_text(family="Optima"),
axis.text=element_text(size=7, face="bold", angle=12)) +
facet_wrap(vars(gender))
spddat <- read_csv("speed_dating_data.csv")
spddat <- subset(spddat, select=c(age, match, int_corr, samerace, gender, field_cd))
spddat <- spddat %>% group_by(field_cd, gender) %>%
summarise(match = sum(match),
int_corr = mean(int_corr),
samerace=mean(samerace)*100,
age=mean(age))
spddat %>% mutate(gender = recode(gender,
'0' = "Women",
'1' = "Men")) -> spddat
ggplot(spddat, aes(match, age, size=samerace, shape=gender, color=int_corr)) +
geom_point() +
scale_y_continuous(breaks=c(22, 25, 30, 35, 39)) +
scale_color_distiller(palette="YlOrRd", direction=1) +
scale_shape(solid=FALSE) +
xlim(0, 100) +
labs(title = "Attributes Affecting Matches Made",
size="Same Race (%)",
shape="Gender",
color="Shared Interests") +
ylab("Average Age") +
xlab("Match") +
theme_bw() +
theme(text = element_text(family="Optima"))
